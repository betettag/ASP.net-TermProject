@model TermProject.ViewModels.AllCardsViewModels
@{
    ViewData["Title"] = "New Duel";
    ViewData["BootStrap"] = true;
    Random rnd = new Random();
    var cards = Model.Cards.Where(c => c.IsPrompt == false && c.CardID != 12).OrderBy(c => Guid.NewGuid()).Take(5);
    var prompt = Model.Cards.Where(c => c.IsPrompt == true && c.CardID != 11 && c.CardID != 13).OrderBy(c => Guid.NewGuid()).First();
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>NewDuel</title>
    <style>
        .card-body {
            min-height: 300px;
            min-width: 300px;
            margin-right: 5px;
        }

        label {
            font-size: 1rem;
        }

        .card-input-element + .card {
            color: gray;
            -webkit-box-shadow: none;
            box-shadow: none;
            border: 2px solid transparent;
            border-radius: 4px;
        }

            .card-input-element + .card:hover {
                cursor: pointer;
            }

        .card-input-element:checked + .card {
            border: 2px solid gray;
            -webkit-transition: border .3s;
            -o-transition: border .3s;
            transition: border .3s;
        }
    </style>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.css">
</head>
<body>
    <h2>Star A New Duel</h2>
    <p>please vote later or ill be sad</p>
    <div class="white-text" style="background-color: black; justify-content:center;">
        please dont vote for yourself
        @Html.ValidationMessage("Validation")
        @using (Html.BeginForm("NewDuelValidation", "Home", FormMethod.Get))
        {
            @*<label>
                Username: 
                <input asp-for="player.U" value="" placeholder="input username here">
            </label>
            <label>
                Password: 
            <input asp-for="player.Password" value="" placeholder="input password here">
            </label>*@
            <h5 class="text-center">@prompt.Text</h5>
            <div class="card-deck" style="justify-content:flex-end; justify-content:center;">
                @foreach (Card c in cards)
                {
                    <label class="radio" style="border-left-width:10px; border-left:10px; justify-content:center;">
                        @Html.RadioButtonFor(model => model.player.CardID, c.CardID, new { @class = "card-input-element d-none" })
                        <!--<input type="radio" asp-for="duel.VotesP1" class="card-input-element d-none" value=";" />-->
                        <div class="card bg-white text-center" style="width: 18rem;">
                            <div class="card-body text-white card-input">
                                <h5 class="card-title black-text">@c.Text</h5>
                                <p class="card-text">
                                    click to select
                                </p>
                                <!--<p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>-->
                            </div>
                            Created by @c.CreatorID
                        </div>
                    </label>



                }
                <input asp-for="player.PlayerID" hidden value="@Model.player.PlayerID">
                <input asp-for="player.PromtID" hidden value="@prompt.CardID">
            </div>
            <button type="submit" value="Submit" class="btn btn-outline-white">Submit</button>
        }

    </div>
</body>
</html>
